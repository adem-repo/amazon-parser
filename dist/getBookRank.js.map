{"version":3,"file":"getBookRank.js","sourceRoot":"","sources":["../src/getBookRank.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,2BAA6B;AAC7B,qCAAuC;AAEvC,SAAe,WAAW,CAAC,GAAW,EAAE,OAAO;;;;;wBAIjC,WAAM,OAAO,CAAC,OAAO,EAAE,EAAA;;oBAA9B,IAAI,GAAG,SAAuB;oBAEpC,WAAM,IAAI,CAAC,IAAI,CAAC,KAAG,GAAK,EAAE,EAAC,SAAS,EAAE,kBAAkB,EAAC,CAAC,EAAA;;oBAA1D,SAA0D,CAAC;oBAE/B,WAAM,IAAI,CAAC,OAAO,EAAE,EAAA;;oBAA1C,WAAW,GAAW,SAAoB;oBAC1C,YAAY,GAAW,YAAY,CAAC;oBACpC,aAAa,GAAG,CAAC,CAAC,YAAY,EAAE,WAAW,CAAC,CAAC;oBAC9B,WAAM,aAAa,CAAC,IAAI,EAAE,EAAA;;oBAAzC,YAAY,GAAG,SAA0B;oBACb,WAAM,YAAY,CAAC,KAAK,CAAC,+BAA+B,CAAC,EAAA;;oBAArF,OAAO,GAAqB,SAAyD;yBAEvF,OAAO,EAAP,cAAO;oBACV,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;;wBAEzB,WAAM,WAAW,CAAC,GAAG,EAAE,OAAO,CAAC,EAAA;;oBAAxC,MAAM,GAAG,SAA+B,CAAA;;wBAEzC,WAAM,IAAI,CAAC,KAAK,EAAE,EAAA;;oBAAlB,SAAkB,CAAC;oBAEnB,WAAO,MAAM,EAAC;;;;CACd;AAED,SAAe,YAAY;;;;;wBACN,WAAM,SAAS,CAAC,MAAM,CAAC;wBAC1C,QAAQ,EAAE,IAAI;qBACd,CAAC,EAAA;;oBAFI,WAAW,GAAG,SAElB;oBACI,OAAO,GAAG,sGAAsG;wBACrH,6EAA6E,CAAA;oBAC9E,WAAM,WAAW,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC,IAAI,CAAC,UAAA,IAAI,IAAI,OAAA,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAjB,CAAiB,CAAC,EAAA;;oBAAvE,SAAuE,CAAA;oBACvE,WAAM,WAAW,CAAC,KAAK,EAAE,EAAA;;oBAAzB,SAAyB,CAAC;;;;;CAC1B;AAID,kBAAe,WAAW,CAAC","sourcesContent":["import * as $ from 'cheerio';\nimport * as puppeteer from 'puppeteer';\n\nasync function getBookRank(url: string, browser) {\n\n\tlet result: string;\n\n\tconst page = await browser.newPage();\n\n\tawait page.goto(`${url}`, {waitUntil: 'domcontentloaded'});\n\n\tconst pageContent: string = await page.content();\n\tconst rankSelector: string = '#SalesRank';\n\tconst targetElement = $(rankSelector, pageContent);\n\tconst targetString = await targetElement.text();\n\tconst matches: string[] | never = await targetString.match(/(#\\d{1,3})(,\\d{3})?(,\\d{3})?/g);\n\n\tif (matches)\n\t\tresult = matches[0].split('#')[1];\n\telse\n\t\tresult = await getBookRank(url, browser)\n\n\tawait page.close();\n\n\treturn result;\n}\n\nasync function testFunction() {\n\tconst tempBrowser = await puppeteer.launch({\n\t\theadless: true\n\t});\n\tconst tempUrl = 'https://www.amazon.com/Broken-Circle-Memoir-Escaping-Afghanistan-ebook/dp/B07DK7FBDS/ref=zg_bs_15732' +\n\t\t'5011_1/130-2905574-2217206?_encoding=UTF8&psc=1&refRID=5YNB4M7E8YTR2CWXCSW8'\n\tawait getBookRank(tempUrl, tempBrowser).then(data => console.log(data))\n\tawait tempBrowser.close();\n}\n\n// testFunction();\n\nexport default getBookRank;"]}